ipscan - an http-initiated IPv6 port scanner, offering text-only and javascript browser compatible versions.

Copyright (C) 2011 Tim Chappell.

This file is part of ipscan.

ipscan is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ipscan. If not, see <http://www.gnu.org/licenses/>.

---

ipscan requires a database and its development libraries to be installed on the server which will act as
your scanner. ipscan currently supports two flavours of database backend - sqlite3 and MySQL. ipscan is 
known to build on Opensuse versions 11.1, 11.4 and 12.1 and run alongside Apache version 2.2.

IMPORTANT: when UPGRADING from versions before 0.90: a database change has occurred and consequently
it is suggested that you remove your existing database prior to building and installing versions 0.90
and later. For sqlite3 users ipscan.h has already been updated to use a different database file.

MORE IMPORTANT: please consider the use of MySQL instead of sqlite whilst I investigate an issue with
database locking during overlapping client scans. 

Steps:
    1. edit the Makefile and adjust the following entries as required:
        a. DBTYPE - set to 1 if MySQL is to be used as the database backend, else 0 for sqlite3.
        b. TARGETDIR - this should be set to the desired location for the cgi files (e.g. /srv/www/cgi-bin6)
        c. URLPATH - this is the URL by which the cgi files will be accessed from your webserver
                   e.g. http://ipv6.chappell-family.com/cgi-bin6/ipscan-js.cgi then set URLPATH=/cgi-bin6
        d. SQLITE3BIN - if DBTYPE selects sqlite3 then this should be set to point to the location of 
           your sqlite3 binary:
                   (e.g. /usr/bin/sqlite3)
        e. TXTTARGET and JSTARGET - these define the names of the two cgi objects that will be created

    2. edit ipscan.h and adjust *at least* the following entries:
        a. EMAILADDRESS - suggest you use a non-personal email address if the webserver will 
                          be world-accessible
        b. DBDIR        - if sqlite3 is in use then the sqlite3 database files will be created here.
                          ensure the specified directory exists and has read/write/execute permissions 
                          for apache!
        c. MYSQL_XXXX   - if MySQL is in use then adjust the following constants to
                          match the settings of your database server: 
                          MYSQL_HOST - the hostname or IP address of the machine hosting the MySQL database
                          MYSQL_USER - the username used to access the ipscan database.
                          MYSQL_PASSWD - the password used to identify the MySQL user.
                          MYSQL_DBNAME - the name of the ipscan database.
                          MYSQL_TBLNAME - the name of the table in which ipscan results will reside.

    3. edit ipscan_portlist.h and change the list of ports to be tested, if required
    
    4. if you are using MySQL as the database backend then you need to create the database and user and allocate 
       appropriate user privileges, using the following commands within the mysql shell:
       
       NB: adjust the host, user name, password and database name to match the globals you've edited above:
    
       mysql> create database ipscan;
       Query OK, 1 row affected (0.00 sec)

       mysql> create user 'ipscan-user'@'localhost' identified by 'ipscan-passwd';
       Query OK, 0 rows affected (0.01 sec)

       mysql> grant all privileges on ipscan.* to 'ipscan-user'@'localhost' identified by 'ipscan-passwd';
       Query OK, 0 rows affected (0.01 sec)

       mysql> exit
       Bye
       
    5. make && make install
    
    6. make sure that the URL path directory (which may well be accessed via an Apache alias) 
       is enabled to execute cgi:
    
       ScriptAlias /cgi-bin6/ "/srv/www/cgi-bin6/"
       <Directory "/srv/www/cgi-bin6">
          AllowOverride None
          Options +ExecCGI -Includes
          Order allow,deny
          Allow from 2000::/3
       </Directory>
    
    7. Browse from a machine that you want testing towards your servers' IPv6 address, e.g.
       w3m http://ipv6.example.com/cgi-bin6/ipscan-txt.cgi  

    8. Check the apache access and error logs for messages. ipscan will place summary messages in the error log
       for all scans.
    
For those considering providing ipscan access on the public internet consider adding a landing page which will check for host IP address suitability prior to allowing access to the cgi script(s) - most (all?) search engine spiders currently only use IPv4. 
It may be advisable to only offer direct links to the cgi scripts if the address checks were successful.

See http://ipv6.chappell-family.com/ipv6tcptest/ as an example.

Getting further help:
If you need further help then please email me at: webmaster@chappell-family.com

